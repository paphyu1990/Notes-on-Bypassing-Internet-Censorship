global
	log /dev/log    local0
	log /dev/log    local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

defaults
	log     global
	mode    tcp
	# option  httplog
	option  dontlognull
	timeout connect 5s
	timeout client  50s
	timeout server  50s
	timeout tunnel 1h
	retry-on all-retryable-errors

frontend ft_tcp
	mode tcp

	bind :443,:::443 v4v6 tfo

	# option tcplog
	tcp-request inspect-delay 5s
	tcp-request content accept if { req_ssl_hello_type 1 }

	# acl alpnh2 req.ssl_alpn h2
	acl softether_direct req_ssl_sni -i -m end softether.yourdomain.com

	acl reality_domains_1 req.ssl_sni -i discordapp.com
	acl reality_domains_2 req.ssl_sni -i web.dev

	use_backend bk_softether if softether_direct
	use_backend bk_tcp_reality if reality_domains_1
	use_backend bk_grpc_reality if reality_domains_2

	default_backend bk_tcp_to_https

backend bk_tcp_to_https
    mode tcp
    # server haproxy-https 127.0.0.1:8443 check
	server haproxy-https 127.0.0.1:8443 send-proxy-v2 tfo

frontend ft_https
	mode http
	# bind *:8443,:::8443 ssl crt /etc/haproxy/certs/
	bind *:8443,:::8443 v4v6 tfo accept-proxy ssl crt /etc/haproxy/certs/ alpn h2,http/1.1,h3

	# http-request redirect scheme https unless { ssl_fc }

	# ACLs
	# acl alpn_h2 ssl_fc_alpn -i h2
	# acl put_request method PUT

	acl marzban_portal path_reg path_reg -i ^/(dashboard|api|docs|redoc|openapi.json|sub/)

	# acl reality_domains_1 hdr(host) -i discordapp.com
	# acl reality_domains_2 hdr(host) -i web.dev
	acl trojan_ws_path path_beg /tjwsIeBKfD8tq70nulcOqU
	acl vless_ws_path path_beg /vlwsIeBKfD8tq70nulcOqU
	acl vmess_ws_path path_beg /vmwsIeBKfD8tq70nulcOqU

	use_backend bk_trojan_ws if trojan_ws_path
	use_backend bk_vless_ws if vless_ws_path
	use_backend bk_vmess_ws if vmess_ws_path
	use_backend bk_marzban_portal if marzban_portal
	default_backend bk_fallback

# SSL Passthrough Backends (every backend manage their own SSL termiantion)
#
backend bk_tcp_reality
	mode tcp
	server tcp_reality 127.0.0.1:11000 send-proxy-v2

backend bk_grpc_reality
	mode tcp
	server grpc_reality 127.0.0.1:12000

backend bk_softether
	mode tcp
	# retry-on all-retryable-errors
	server softether 127.0.0.1:5555 tfo

# SSL Terminated by HAProxy Backends (plain http traffic between HAProxy and these backends)
#
backend bk_trojan_ws
	mode http
	server trojan_ws 127.0.0.1:8081 send-proxy-v2 tfo

backend bk_vless_ws
	mode http
	server vless_ws 127.0.0.1:8082 send-proxy-v2 tfo

backend bk_vmess_ws
	mode http
	server vmess_ws 127.0.0.1:8083 send-proxy-v2 tfo

backend bk_marzban_portal
	mode http
	server marzban_portal 127.0.0.1:8000
	http-request set-header X-Forwarded-For %[src]
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }


backend bk_fallback
	mode http
	server marzban_portal 127.0.0.1:8000
	http-request set-header X-Forwarded-For %[src]
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
